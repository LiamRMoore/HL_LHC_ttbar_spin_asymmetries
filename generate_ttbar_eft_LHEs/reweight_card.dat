#*************************************************************************
#                          Reweight Module                               *
#                Matrix-Element reweighting at LO/NLO                    *
#  Mattelaer Olivier                                    arxiv:1607.00763 *
#*************************************************************************
#
# Note:
#   1) the value of alpha_s will be used from the event so the value in
#      the param_card is not taken into account.
#   2) It is (in general) dangerous/wrong to change parameters by a large
#      amount, if this changes the shape of the matrix elements a lot.
#      (For example, changing a particle's mass by much more than its
#      width leads to very inaccurate result). In such a case, separate
#      event generation runs are needed.
#
#************************************************************************
# ENTER YOUR COMMANDS BELOW.
#************************************************************************

change mode NLO    # Define type of Reweighting. For LO sample this command
                   # has no effect since only "LO" mode is allowed.
#  SPECIFY A PATH OR USE THE SET COMMAND LIKE THIS:
# set sminputs 1 130 # modify 1/alpha_EW
#
#************************************************************************
#
# INFO FOR TOP SPIN/ASYMMETRY OPERATORS
#
#************************************************************************
#
# 1802.07237
# two-light/two-heavy coefficient dict
#
# cQq11 = c1qqii33 + 1/6 c1qqi33i + 1/2 c3qqi33i      (dim6 59) (lims: [-0.66,1.24])
# cQq13 = c3qqii33 + 1/6 (c1qqi33i - c3qqi33i)        (dim6 58) (lims: [-6.06,6.73])
# cQq81 = c1qqi33i + 3 c3qqi33i                       (dim6 52) (lims: [-3.13,3.15]) **
# cQq83 = c1qqi33i + c3qqi33i                         (dim6 51) (lims: [-6.92,4.93]) **
# ctu1 = cuuii33 + 1/3 cuui33i                        (dim6 63) (lims: [-3.31,3.44])
# ctu8 = 2 cui33i                                     (dim6 56) (lims: [-8.13,4.05]) **
# ctd1 = c1ud33ii                                     (dim6 64) (lims: [-4.98,5.02])
# ctd8 = c8ud33ii                                     (dim6 57) (lims: [-11.7,9.39]) **
# ctq1 = c1quii33                                     (dim6 62) (lims: [-2.84,2.84])
# cQu1 = c1qu33ii                                     (dim6 60) (lims: [-6.80,3.49])
# cQd1 = C1qd33ii                                     (dim6 61) (lims: [-3.62,3.57])
# ctq8 = C8quii33                                     (dim6 55) (lims: [-8.05,4.75]) **
# cQu8 = C8qu33ii                                     (dim6 53) (lims: [-4.95,5.04]) **
# cQd8 = C8qd33ii                                     (dim6 54) (lims: [-11.8,9.31]) **
#
# chromo
#
# ctG                                                 (dim6 16) (lims: [-1.32,1.24]) **
# ctGI                                                (dim6 17) (lims: [-?,?])       **
#
# 1508.05271
# contrib to spin LCs: c1qq1133, c1qq1331, c3qq1133, c3qq1331, c8qd3311, c8qu1133, c8qu3311, c8ud3311, cuu1133, cuu1331
# octet basis => cQq81, cQq83, ctu8, ctd8, ctq8, cQu8, cQd8
#
# *** do scan (one-at-a-time)
#
# cQq81
launch --rwgt_name=sm
launch --rwgt_name=cQq81
set dim6 52 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# cQq83
launch --rwgt_name=cQq83
set dim6 51 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# ctu8
launch --rwgt_name=ctu8
set dim6 56 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# ctd8
launch --rwgt_name=ctd8
set dim6 57 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# ctq8
launch --rwgt_name=ctq8
set dim6 55 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# cQu8
launch --rwgt_name=cQu8
set dim6 53 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# cQd8
launch --rwgt_name=cQd8
set dim6 54 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# ctG
launch --rwgt_name=ctG
set dim6 16 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]
# ctGI
launch --rwgt_name=ctGI
set dim6 17 scan:[-1.0, -0.6666, -0.3333, 0.3333, 0.6666, 1.0]



#************************************************************************
# Manual:      https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/Reweight
#************************************************************************
#
# Example of (standard) code for the computation of two weights:
#
# launch                    ! tag to start the computation of the first weight
#  set BLOCKNAME ID VALUE   ! rule to modify the current param_card
#  set BLOCKNAME ID VALUE   ! rule to modify the current param_card
# launch                    ! start to compute a second weight
#  /home/Cards/param_card_2.dat ! you can also enter a path to a valid card
#
# Note: The command to specify the parameter are AFTER the associated "launch"
#
# Possible options:
#   You can enter one of the following lines to customize the reweighting
#   procedure. These need to be given before the 'launch' command.
#
# change model NAME : use another model for the matrix-elements to reweight
#        with. In this case you need to provide the path to a correct
#        param_card for the new model; you cannot modify the original one
#        with the 'set' command.
# change process DEF [--add]: change the process by which you reweight.
#        The initial and final state particles of the new process should
#        be exactly identical to the ones in the original process.
# change helicity False: perform the reweighting by helicity summed
#        matrix-elements even if the events have been written with a
#        single helicity state.
# change mode XXX: change the type of reweighting performed.
#        allowed values: LO, NLO, LO+NLO
#        - This command has no effect for reweighting an .lhe event file with LO accuracy.
#          In that case LO mode is always used (whatever entry is set).
#        - When the .lhe file reweighted is at NLO accuracy, then all modes are allowed.
#          * "LO" is an approximate leading order method
#          * "NLO" is the NLO accurate method
#          * "LO+NLO" runs both
#       - "NLO" and "LO+NLO" modes requires 'store_rwgt_info' equals True (run_card.dat)
#          If the reweighting is done at generation level this parameter will
#          automatically be set on True.
#************************************************************************
#
#  Block dim6
#    1 1.000000e+03 # Lambda
#    2 0.000000e+00 # ctp
#    3 0.000000e+00 # ctpI
#    4 0.000000e+00 # cpQM
#    5 0.000000e+00 # cpQ3
#    6 0.000000e+00 # cpt
#    7 0.000000e+00 # cpb
#    8 0.000000e+00 # cptb
#    9 0.000000e+00 # cptbI
#   10 0.000000e+00 # ctW
#   11 0.000000e+00 # ctZ
#   12 0.000000e+00 # ctWI
#   13 0.000000e+00 # ctZI
#   14 0.000000e+00 # cbW
#   15 0.000000e+00 # cbWI
#   16 0.000000e+00 # ctG
#   17 0.000000e+00 # ctGI
#   18 0.000000e+00 # cQlM1
#   19 0.000000e+00 # cQlM2
#   20 0.000000e+00 # cQlM3
#   21 0.000000e+00 # cQl31
#   22 0.000000e+00 # cQl32
#   23 0.000000e+00 # cQl33
#   24 0.000000e+00 # cQe1
#   25 0.000000e+00 # cQe2
#   26 0.000000e+00 # cQe3
#   27 0.000000e+00 # ctl1
#   28 0.000000e+00 # ctl2
#   29 0.000000e+00 # ctl3
#   30 0.000000e+00 # cte1
#   31 0.000000e+00 # cte2
#   32 0.000000e+00 # cte3
#   33 0.000000e+00 # ctlS1
#   34 0.000000e+00 # ctlSI1
#   35 0.000000e+00 # ctlS2
#   36 0.000000e+00 # ctlSI2
#   37 0.000000e+00 # ctlS3
#   38 0.000000e+00 # ctlSI3
#   39 0.000000e+00 # ctlT1
#   40 0.000000e+00 # ctlTI1
#   41 0.000000e+00 # ctlT2
#   42 0.000000e+00 # ctlTI2
#   43 0.000000e+00 # ctlT3
#   44 0.000000e+00 # ctlTI3
#   45 0.000000e+00 # cblS1
#   46 0.000000e+00 # cblSI1
#   47 0.000000e+00 # cblS2
#   48 0.000000e+00 # cblSI2
#   49 0.000000e+00 # cblS3
#   50 0.000000e+00 # cblSI3
#   51 0.000000e+00 # cQq83
#   52 0.000000e+00 # cQq81
#   53 0.000000e+00 # cQu8
#   54 0.000000e+00 # cQd8
#   55 0.000000e+00 # ctq8
#   56 0.000000e+00 # ctu8
#   57 0.000000e+00 # ctd8
#   58 0.000000e+00 # cQq13
#   59 0.000000e+00 # cQq11
#   60 0.000000e+00 # cQu1
#   61 0.000000e+00 # cQd1
#   62 0.000000e+00 # ctq1
#   63 0.000000e+00 # ctu1
#   64 0.000000e+00 # ctd1
#   65 0.000000e+00 # cQQ1
#   66 0.000000e+00 # cQQ8
#   67 0.000000e+00 # cQt1
#   68 0.000000e+00 # cQb1
#   69 0.000000e+00 # ctt1
#   70 0.000000e+00 # ctb1
#   71 0.000000e+00 # cQt8
#   72 0.000000e+00 # cQb8
#   73 0.000000e+00 # ctb8
#   74 0.000000e+00 # ctQqu1
#   75 0.000000e+00 # ctQqu1I
#   76 0.000000e+00 # ctQqu8
#   77 0.000000e+00 # ctQqu8I
#   78 0.000000e+00 # cbQqd1
#   79 0.000000e+00 # cbQqd1I
#   80 0.000000e+00 # cbQqd8
#   81 0.000000e+00 # cbQqd8I
#   82 0.000000e+00 # cQtqd1
#   83 0.000000e+00 # cQtqd1I
#   84 0.000000e+00 # cQtqd8
#   85 0.000000e+00 # cQtqd8I
#   86 0.000000e+00 # cQbqu1
#   87 0.000000e+00 # cQbqu1I
#   88 0.000000e+00 # cQbqu8
#   89 0.000000e+00 # cQbqu8I
#   90 0.000000e+00 # cbtud1
#   91 0.000000e+00 # cbtud1I
#   92 0.000000e+00 # cbtud8
#   93 0.000000e+00 # cbtud8I
#   94 0.000000e+00 # cQtQb1
#   95 0.000000e+00 # cQtQb8
#   96 0.000000e+00 # cQtQb1I
#   97 0.000000e+00 # cQtQb8I
